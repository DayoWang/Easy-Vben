<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easy.restful.sys.dao.SysDeptMapper">
    <resultMap id="BaseResultMap" type="com.easy.restful.sys.model.SysDept">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="p_id" jdbcType="BIGINT" property="pId"/>
        <result column="p_ids" jdbcType="VARCHAR" property="pIds"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="type_code" jdbcType="VARCHAR" property="typeCode"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="simple_name" jdbcType="VARCHAR" property="simpleName"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="tips" jdbcType="VARCHAR" property="tips"/>
        <result column="order_no" jdbcType="INTEGER" property="orderNo"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="create_user" jdbcType="BIGINT" property="createUser"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="edit_user" jdbcType="BIGINT" property="editUser"/>
        <result column="edit_date" jdbcType="TIMESTAMP" property="editDate"/>
    </resultMap>
    <select id="select" resultMap="BaseResultMap">
        select t.id,t.name,t.simple_name,t.status,t.code,dt.name as type_code,p.name as p_name,t.order_no from sys_dept t
        left join sys_dept p on p.id = t.p_id
        left join sys_dept_type dt on dt.code = t.type_code
        <where>
            ${ew.sqlSegment}
        </where>
    </select>
    <select id="getMaxOrderNo" resultType="java.lang.Integer">
        select ifnull(max(order_no), 0) from sys_dept t where t.p_id = #{pId}
    </select>

    <select id="selectCountByTypeIds" resultType="java.lang.Integer">
        select count(1) from sys_dept t
          left join sys_dept_type dt on dt.code = t.type_code
        <where>
            ${ew.sqlSegment}
        </where>
    </select>
    <select id="selectOptionByTypeCode" resultType="com.easy.restful.common.core.common.select.Select">
        select t.id as value,t.name as text from sys_dept t where t.type_code = #{typeCode}
    </select>
    <select id="selectOptionByParentTypeCode" resultType="com.easy.restful.common.core.common.select.Select">
        select t.id as value,t.name as text from sys_dept t
        where type_code = (select code from sys_dept_type t where t.id =
          (select p_id from sys_dept_type where code = #{code})
        )
    </select>
    <select id="selectByTitle" resultType="com.easy.restful.common.core.common.tree.Tree">
        select t.id, t.p_id, t.name as title,(case when t.status = 2 then 'disabled' end) as type
        from sys_dept t where t.name like #{title} order by t.p_id,t.order_no limit 0,50
    </select>
    <select id="selectByPId" resultType="com.easy.restful.common.core.common.tree.Tree">
        select t.id, t.p_id,t.name as title,(case when t.status = 2 then 'disabled' end) as type,
          (case when (select count(1) from sys_dept where p_id = t.id) > 0 then 'false' else 'true' end ) as isLeaf
        from sys_dept t where t.p_id = #{pId} order by t.order_no
    </select>
    <select id="selectById" resultType="com.easy.restful.sys.model.SysDept">
        select t.*, sdt.name as type_name from sys_dept t
            left join sys_dept_type sdt on t.type_code = sdt.code
        where t.id = #{id}
    </select>
    <select id="selectDepartments" resultType="com.easy.restful.sys.model.SysDept">
        select sd.id, sd.name from sys_dept sd
        <where>
            ${ew.sqlSegment}
        </where>
    </select>
</mapper>